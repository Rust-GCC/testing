name: gccrs-testing-test

on:
  pull_request:
  push:
    branches:
      - main

env:
  RUSTFLAGS: '-Dwarnings'

jobs:
  coding-style:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Check the coding style
      run: cargo fmt -- --check

  check:
    runs-on: ubuntu-latest
    needs: coding-style

    steps:
    - uses: actions/checkout@v2
    - name: Check testsuite-adaptor
      run: cargo check
    - name: Run Clippy
      run: cargo clippy --all -- -Wclippy::pedantic

  # Generate an entire testsuite to make sure it completes properly
  full-run:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: check

    steps:
    - uses: actions/checkout@v2
    - name: Build testsuite-adaptor
      run: |
          cargo build --release
          git submodule update --init
          git clone https://github.com/rust-gcc/gccrs local_gccrs
          target/release/testsuite-adaptor --gccrs './rust1' --rustc rustc \
          --output-dir tmp-test-sources --yaml test.yml \
          --rust-path rust --gccrs-path local_gccrs \
          --passes rustc-dejagnu gccrs-parsing \
          gccrs-rustc-success \
          gccrs-rustc-success-no-core \
          gccrs-rustc-success-no-std \
